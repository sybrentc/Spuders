:root {
    --defence-menu-width: 12vw; /* Define menu width as percentage of viewport width */
}

body {
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;  /* Centers horizontally */
    align-items: center;      /* Centers vertically */
    min-height: 100vh;       /* Full viewport height */
    background-color: black;
}

/* Added styles for the defence menu */
#defenceMenu {
    width: var(--defence-menu-width); /* Use the variable */
    background-color: #0b1738;
    height: 100vh; /* Full viewport height */
    padding: 15px 5px; /* More vertical padding, less horizontal */
    box-sizing: border-box; /* Include padding in width/height */
    flex-shrink: 0; /* Prevent menu from shrinking */
    display: flex; /* Use flexbox for buttons */
    flex-direction: column; /* Stack buttons vertically */
    align-items: center; /* Center buttons horizontally */
    gap: 10px; /* Add space between buttons */
    overflow-y: auto; /* Add scrollbar if buttons overflow */
}

/* Styling for individual buttons */
.defence-button {
    display: flex;
    flex-direction: column; /* Stack name and price vertically */
    align-items: center; /* Center text horizontally */
    justify-content: center; /* Center text vertically */
    width: 90%; /* Make buttons fill most of menu width */
    min-height: 60px; /* Set a fixed height for buttons */
    padding: 5px;
    border: 1px solid #61dafb; /* Light blue border */
    border-radius: 5px;
    /* Replace flat color with a subtle gradient for shine */
    background-image: linear-gradient(to bottom, #555b65, #3c4049);
    /* background-color: #3c4049; */ /* Keep fallback or remove */
    color: #ffffff; /* White text */
    font-family: sans-serif;
    font-size: 0.9em;
    cursor: pointer;
    text-align: center;
    transition: background-color 0.2s ease, transform 0.1s ease; /* Smooth transitions */
    box-sizing: border-box;
    /* Add subtle shadow for depth */
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.defence-button .name {
    font-weight: bold;
    font-size: 1.1em; /* Slightly larger name */
    margin-bottom: 3px; /* Space between name and price */
}

.defence-button .price {
    color: #61dafb; /* Light blue price text */
}

/* Hover effect */
.defence-button:hover {
    /* Enhance gradient on hover */
    background-image: linear-gradient(to bottom, #6a707a, #4a4e57);
    /* background-color: #4a4e57; */ /* Keep fallback or remove */
    border-color: #ffffff; /* White border on hover */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4), inset 0 1px 0 rgba(255, 255, 255, 0.15);
}

/* Active (click) effect */
.defence-button:active {
    /* Use gradient for active state too */
    background-image: linear-gradient(to bottom, #50b4d4, #61dafb);
    /* background-color: #61dafb; */ /* Keep fallback or remove */
    color: #1c1e22; /* Darker text on click */
    transform: scale(0.98); /* Slightly shrink button on click */
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3); /* Inner shadow on click */
}

.defence-button:active .price {
    color: #1c1e22; /* Dark price on click */
}

/* Style for disabled/unaffordable buttons */
.defence-button.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none; /* Make it non-clickable */
    background-image: linear-gradient(to bottom, #444, #222); /* Darker grey gradient */
    border-color: #555;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2); /* Less pronounced shadow */
}

.defence-button.disabled .price {
    color: #aaa; /* Dimmer price color */
}

/* Styling for the selected button */
.defence-button.selected {
    border-color: #ffcc00; /* Gold border */
    box-shadow: 0 0 10px rgba(255, 204, 0, 0.7); /* Gold glow */
    background-image: linear-gradient(to bottom, #7a808a, #5a5e67); /* Slightly different gradient */
}

#gameContainer {
    position: relative;
    /* Use min() for square aspect ratio, considering menu width */
    width: min(calc(100vw - var(--defence-menu-width)), 100vh); /* Use variable in calc */
    height: min(calc(100vw - var(--defence-menu-width)), 100vh); /* Use variable in calc */

    /* Ensure canvas within aligns correctly */
    display: flex;
    justify-content: center;
    align-items: center;
    /* Optional: Add a margin if needed for spacing */
    /* margin: auto; Add this if centering within the flex space is desired */
}

/* Style the canvas created by PixiJS */
#gameContainer canvas {
    max-width: 100%;
    max-height: 100%;
    /* The following are important for maintaining aspect ratio within a flex container */
    /* Let the browser determine width/height based on intrinsic aspect ratio up to the max values */
    width: auto;
    height: auto;
    display: block; /* Removes extra space below canvas if it behaves like an inline element */
}

.game-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

/* UI Overlay Styles */
#uiOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    color: white;
    font-family: sans-serif;
    font-size: 1.2em;
    /* Add text-shadow for outline on all child elements */
    text-shadow: 
        -1px -1px 0 #000,  
         1px -1px 0 #000,
        -1px  1px 0 #000,
         1px  1px 0 #000;
    z-index: 10; /* Ensure it's above canvas */
    pointer-events: none; /* Prevent UI from blocking clicks */
}

#fundsDisplay {
    position: absolute;
    top: 10px;  /* Padding from the top */
    right: 10px; /* Padding from the right */
    text-align: right;
    /* Optional: background for better readability */
    /* background-color: rgba(0, 0, 0, 0.5); */
    /* padding: 5px; */
}

#waveInfoDisplay {
    position: absolute;
    top: 10px; /* Padding from the top */
    left: 50%;
    transform: translateX(-50%); /* Center horizontally */
    text-align: center;
    /* Optional: background for better readability */
    /* background-color: rgba(0, 0, 0, 0.5); */
    /* padding: 5px; */
}

/* --- NEW: Overlay Styles --- */
.overlay {
    position: fixed; /* Cover the whole viewport */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.75); /* Default dark overlay */
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10; /* Ensure it's above game layers and UI overlay */
    opacity: 1; /* Start fully visible */
    pointer-events: auto; /* Allow clicks when visible */
}

.overlay.hidden {
    display: none; 
    pointer-events: none; /* Prevent clicks when hidden */
}

/* ADDED: Class specifically for fade-in transition */
.overlay.fade-in {
    transition: opacity 3s ease-in-out;
}

/* Game over specific overlay style */
.overlay.game-over {
    background-color: rgba(150, 0, 0, 0.75); /* Dark red */
}

/* --- NEW: Popup Window Styles --- */
.popup {
    background-color: #f0f0f0; /* Light grey background */
    padding: 30px 40px;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    text-align: center;
    color: #333;
}

.popup h2 {
    margin-top: 0;
    margin-bottom: 25px;
    font-family: 'Arial', sans-serif; /* Example font */
}

/* --- NEW: Button Styles --- */
#popupButtons {
    display: flex;
    flex-direction: column; /* MODIFIED: Stack vertically */
    align-items: center;    /* ADDED: Center horizontally */
    gap: 10px;             /* Adjust gap for vertical spacing */
    /* REMOVED: justify-content: center; (Not needed for single column centering) */
}

.difficulty-button {
    padding: 12px 25px;
    font-size: 1em;
    cursor: pointer;
    border: none;
    border-radius: 5px;
    background-color: #4CAF50; /* Example green */
    color: white;
    transition: background-color 0.2s ease;
    width: 180px; /* ADDED: Set a fixed width */
    box-sizing: border-box; /* ADDED: Ensure padding is included in width */
}

.difficulty-button:hover {
    background-color: #45a049;
}

/* Optional: Different colors for difficulty? */
.difficulty-button[data-difficulty="easy"] { background-color: #5cb85c; }
.difficulty-button[data-difficulty="easy"]:hover { background-color: #4cae4c; }
.difficulty-button[data-difficulty="normal"] { background-color: #f0ad4e; }
.difficulty-button[data-difficulty="normal"]:hover { background-color: #ec971f; }
.difficulty-button[data-difficulty="hard"] { background-color: #d9534f; }
.difficulty-button[data-difficulty="hard"]:hover { background-color: #c9302c; }
.difficulty-button[data-difficulty="classic"] { background-color: #007bff; } /* Blue for classic */
.difficulty-button[data-difficulty="classic"]:hover { background-color: #0056b3; }